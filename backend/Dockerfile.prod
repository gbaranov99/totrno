# pull official base image
FROM python:3.8.1-alpine

RUN mkdir /code
WORKDIR /code

ARG MY_ENV

ENV MY_ENV=${MY_ENV} \
	PYTHONFAULTHANDLER=1 \
	PYTHONUNBUFFERED=1 \
	PYTHONHASHSEED=random \
	PIP_NO_CACHE_DIR=off \
	PIP_DISABLE_PIP_VERSION_CHECK=on \
	PIP_DEFAULT_TIMEOUT=100 \
	POETRY_VERSION=0.12.17
	#POETRY_VERSION=1.0.2

# System deps:
RUN apk update \
    && apk add --virtual build-deps gcc python3-dev musl-dev \
    && apk add postgresql-dev \
    && pip install psycopg2 \
    && apk del build-deps

RUN pip install --upgrade pip
RUN pip install "poetry==$POETRY_VERSION"

# Copy only requirements to cache them in docker layer
COPY poetry.lock pyproject.toml /code/

# Project initialization:
RUN poetry config settings.virtualenvs.create false \
	&& poetry install --no-interaction --no-ansi

# Creating folders, and files for a project:
COPY ./entrypoint.sh /code/entrypoint.sh
COPY ./static/ /code/static/

# run entrypoint.sh
ENTRYPOINT ["/code/entrypoint.prod.sh"]
