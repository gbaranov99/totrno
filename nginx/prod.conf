user  nginx;
worker_processes  3;

events {
  worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    client_max_body_size 100m;

    upstream backend {
      server backend:8000;
    }
    
    server {
        listen 80;
        listen [::]:80;
        server_name totrno.com www.totrno.com;


         location / {
             rewrite ^ https://$host$request_uri? permanent;
         }
    }


    #https://totrno.com
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name totrno.com;
    
        server_tokens off;
    
        ssl_certificate /etc/letsencrypt/live/totrno.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/totrno.com/privkey.pem;
    
        ssl_buffer_size 8k;
    
        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
    
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;
    
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    
        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;
    
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;
        
        return 301 https://www.totrno.com$request_uri;
    }
       
    #https://www.totrno.com
    server {
        server_name www.totrno.com;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
    
        server_tokens off;
    
        #ssl on;
    
        ssl_buffer_size 8k;
        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
    
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    
        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;
    
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4;
    
        ssl_certificate /etc/letsencrypt/live/totrno.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/totrno.com/privkey.pem;
    
        location ~ ^/(static|media)/ {
          root /code;
        }
      
        root /dist;
        index index.html;
      
        # frontend
        location / {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            #add_header Content-Security-Policy "default-src 'self'; font-src 'https://fonts.googleapis.com'; img-src 'self'; object-src 'none'; script-src 'self'; style-src 'self'" always;
            add_header Content-Security-Policy "default-src 'self';  img-src 'self'; object-src 'none';" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            try_files $uri $uri/ @rewrites;
        }
      
        location @rewrites {
          rewrite ^(.+)$ /index.html last;
        }
    
        location ~ ^/(admin|api) {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            #add_header Content-Security-Policy "default-src 'none'; font-src 'https://fonts.googleapis.com'; img-src 'self' https://i.imgur.com; object-src 'none'; script-src 'self'; style-src 'self'" always;
            add_header Content-Security-Policy "default-src 'self';  img-src 'self'; object-src 'none';" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            proxy_pass http://backend;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
      
        # backend urls
        #location ~ ^/(admin|api) {
        #  proxy_redirect off;
        #  proxy_pass http://backend;
        #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #  proxy_set_header Host $http_host;
        #}
      
    }
}
